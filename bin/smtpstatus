#!perl

our $DATE = '2015-01-03'; # DATE
our $VERSION = '0.04'; # VERSION

use 5.010001;
use strict;
use warnings;
use Perinci::CmdLine::Any -prefer_lite=>1;

our %SPEC;

$SPEC{smtpstatus} = {
    v => 1.1,
    summary => 'List SMTP statuses',
    args => {
        query => {
            summary     => 'Search query',
            schema      => ['str*'],
            description => <<'_',

To search for a specific code: `4.` or `x.1` or `.1.4`.

To search in summary or description: `bad` or `bad dest`.

_
            pos         => 0,
        },
        description => {
            summary     => 'Whether to show description',
            schema      => [bool => default => 0],
        },
    },
};
sub smtpstatus {
    require App::smtpstatus;

    my %args = @_;
    my $q = $args{query};

    my %fa;
    $fa{with_field_names} = 1;
    $fa{fields} = ['code', 'summary'];
    push @{ $fa{fields} }, 'description' if $args{description};
    if (defined $q) {
        if ($q =~ /^\.?(\d+|x)(?:\.(\d+|x))*$/i) {
            $fa{'code.contains'} = uc($q);
        } else {
            $fa{q} = $q;
        }
    }
    #use Data::Dump; dd \%fa;
    App::smtpstatus::list_smtp_statuses(%fa);
}

Perinci::CmdLine::Any->new(url => '/main/smtpstatus')->run;

1;
# ABSTRACT: List SMTP statuses
# PODNAME: smtpstatus

__END__

=pod

=encoding UTF-8

=head1 NAME

smtpstatus - List SMTP statuses

=head1 VERSION

This document describes version 0.04 of smtpstatus (from Perl distribution App-smtpstatus), released on 2015-01-03.

=head1 SYNOPSIS

 # Show all statuses
 % smtpstatus

 # Show all X.1.X statuses
 % smtpstatus x.1

 # Show all statuses containing 'bad destination' in summary/description
 % smtpstatus 'bad dest'

 # Show longer description
 % smptatus 'search string' --desc

=head1 OPTIONS

C<*> marks required options.

=over

=item B<--config-path>=I<s>

Set path to configuration file.

Can be specified multiple times.

=item B<--config-profile>=I<s>

Set configuration profile to use.

=item B<--description>

Whether to show description.

=item B<--format>=I<s>

Choose output format, e.g. json, text.

=item B<--help>, B<-h>, B<-?>

Display this help message.

=item B<--json>

Set output format to json.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=item B<--no-config>

Do not use any configuration file.

=item B<--query>=I<s>

Search query.

To search for a specific code: `4.` or `x.1` or `.1.4`.

To search in summary or description: `bad` or `bad dest`.


=item B<--version>, B<-v>

=back

=head1 FILES

B</etc/smtpstatus.conf>

B<~/smtpstatus.conf>

=head1 COMPLETION

This script has shell tab completion capability with support for several shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C smtpstatus smtpstatus

in your bash startup (e.g. C<~/.bashrc>). Your next shell session will then recognize tab completion for the command. Or, you can also directly execute the line above in your shell to activate immediately.

It is recommended, however, that you install L<shcompgen> which allows you to activate completion scripts for several kinds of scripts on multiple shells. Some CPAN distributions (those that are built with L<Dist::Zilla::Plugin::GenShellCompletion>) will even automatically enable shell completion for their included scripts (using C<shcompgen>) at installation time, so you can immadiately have tab completion.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete smtpstatus 'p/*/`smtpstatus`/'

in your tcsh startup (e.g. C<~/.tcshrc>). Your next shell session will then recognize tab completion for the command. Or, you can also directly execute the line above in your shell to activate immediately.

It is also recommended to install C<shcompgen> (see above).

=head2 other shells

For fish and zsh, install C<shcompgen> as described above.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/App-smtpstatus>.

=head1 SOURCE

Source repository is at L<https://github.com/sharyanto/perl-App-smtpstatus>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=App-smtpstatus>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2015 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
